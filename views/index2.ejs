<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>지도</title>
  <link rel="stylesheet" href="/index.css" />
  <script src="//dapi.kakao.com/v2/maps/sdk.js?appkey=ac73da0bc285654e5caf4d876477698c&autoload=true&libraries=services,clusterer"></script>
</head>
<body>
  <div class="main-content">
    <div class="side">
      <div class="header-bar">
        <h2 class="header-name">ESG ANALYSIS</h2>
        <div class="search-box">
          <input id="search" placeholder="검색..." />
          <div class="category-list">
            <select id="category" name="esg-rate">
              <option value="all">전체</option>
              <option value="물류창고업체">물류창고업체</option>
              <option value="국제물류주선업">국제물류주선업</option>
              <option value="식품첨가물제조업">식품첨가물제조업</option>
              <option value="용기·포장지제조업">용기·포장지제조업</option>
              <option value="용기냉동기특설정비">용기냉동기특설정비</option>
              <option value="대학">대학</option>
            </select>
            <button id="routeButton">경로 탐색</button>
          </div>
        </div>
      </div>
      <div id="sidebar"></div>
    </div>

    <div id="popupModal" style="
        display: none;
        position: fixed;
        top: 50%; left: 50%;
        width: 800px; height:800px;
        transform: translate(-50%, -50%);
        background: white;
        border: 2px solid #444;
        border-radius: 8px;
        z-index: 9999;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);">
      <div class = "popup-banner">
        <h3 style="margin-top:0;">경로 탐색 도구</h3>
        <div class = "popup-banner-class1">
          <div>
            <div style="position: relative;">
              <input id="companyInputA" class="select-cor" placeholder="기업명 입력" autocomplete="off">
              <div id="autocompleteA" class="autocomplete-list"></div>
            </div>
            <div style="position: relative;">
              <input id="companyInputB" class="select-cor" placeholder="기업명 입력" autocomplete="off">
              <div id="autocompleteB" class="autocomplete-list"></div>
            </div>
            <div style="position:relative;">
              <input id ="departure_time" type="datetime-local" />
            </div>
            <button class="route-search-but" onclick="getCarDirection()">검색</button>
          </div>
          <div class="routeInfo">
            <div id="routeInfo" style="padding:0 0 0 10px; font-size:14px;"></div>
          </div>
        </div>
      </div>
      <div id="kakaoMap" style="width:100%; height:67%;"></div>
      <button onclick="closeModal()">닫기</button>
    </div>

    <div id="map" style="width:100%; height:100vh;"></div>
  </div>

  <script>
  let searchInput;
  let categorySelect;

  async function fetchCompanyData() {
    try {
      const response = await fetch('/api/companies');
      return await response.json();
    } catch (error) {
      console.error('🚨 Error fetching company data:', error);
      return [];
    }
  }

  function initMap() {
    const mapContainer = document.getElementById("map");
    searchInput = document.getElementById("search"); // ✅ 전역에 할당
    categorySelect = document.getElementById("category");
    const sidebarElement = document.getElementById("sidebar");

    if (!mapContainer || !sidebarElement || !searchInput) {
      console.error("❌ 'map', 'sidebar', 'search' 요소를 찾을 수 없습니다!");
      return;
    }

    const mapOption = {
      center: new kakao.maps.LatLng(35.1796, 129.0756),
      level: 5
    };

    const map = new kakao.maps.Map(mapContainer, mapOption);
    const clusterer = new kakao.maps.MarkerClusterer({
      map: map,
      averageCenter: true,
      minLevel: 5
    });

    let companies = [];
    let markers = [];

    function updateMarkers(filterText = "", selectedCategory = "all") {
      clusterer.clear();
      sidebarElement.innerHTML = "";
      markers = [];

      companies
        .filter(company => {
          const matchText = company.business_name.toLowerCase().includes(filterText.toLowerCase());
          const matchCategory = selectedCategory === "all" || company.service_name === selectedCategory;
          return matchText && matchCategory;
        })
        .forEach(company => {
          const position = new kakao.maps.LatLng(parseFloat(company.coord_y), parseFloat(company.coord_x));

          const marker = new kakao.maps.Marker({
            position: position,
            title: company.business_name
          });

          kakao.maps.event.addListener(marker, 'click', function () {
            const iwContent = `
              <div style="padding:5px;">
                <strong>${company.business_name}</strong><br>
                위도: ${position.getLat().toFixed(5)}<br>
                경도: ${position.getLng().toFixed(5)}
              </div>`;
            const infowindow = new kakao.maps.InfoWindow({ content: iwContent });
            infowindow.open(map, marker);
          });

          markers.push(marker);

          const listItem = document.createElement("div");
          listItem.className = "list-item";
          listItem.innerHTML = `
            <strong class="location-name">${company.business_name}</strong><br>
            <span class="location-info-2">${company.service_name}</span><br>
            <span class="location-info-3">${!company.full_road_address || company.full_road_address === 'NaN' ? '주소정보없음' : company.full_road_address}</span>
          `;
          listItem.addEventListener("click", () => {
            map.setCenter(position);
            map.setLevel(3);
          });

          sidebarElement.appendChild(listItem);
        });

      clusterer.addMarkers(markers);
    }

    fetchCompanyData().then(data => {
      companies = data;
      updateMarkers();
    });

    // ✅ 이벤트 리스너들은 initMap 안에 위치해야 DOM 로딩 이후 실행됨
    searchInput.addEventListener("input", (e) => {
      const selectedCategory = categorySelect.value;
      updateMarkers(e.target.value, selectedCategory);
    });

    categorySelect.addEventListener("change", () => {
      const selectedCategory = categorySelect.value;
      const searchText = searchInput.value;
      updateMarkers(searchText, selectedCategory);
    });
  }

  document.getElementById("routeButton").addEventListener("click", function () {
    document.getElementById("popupModal").style.display = "block";
  });

  function closeModal() {
    document.getElementById("popupModal").style.display = "none";
  }

  window.onload = initMap;
</script>


  <script src="/autocompany.js"></script>
  <script>
    window.addEventListener("DOMContentLoaded", () => {
      const input = document.getElementById("departure_time");
      const now = new Date();

      const yyyy = now.getFullYear();
      const MM = String(now.getMonth() + 1).padStart(2, '0');
      const dd = String(now.getDate()).padStart(2, '0');
      const hh = String(now.getHours()).padStart(2, '0');
      const mm = String(now.getMinutes()).padStart(2, '0');

      const formatted = `${yyyy}-${MM}-${dd}T${hh}:${mm}`;
      input.value = formatted;
    });
  </script>
  <script src="/search-route.js"></script>

</body>
</html>
